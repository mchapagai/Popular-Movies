apply plugin: 'com.android.application'
apply from: '../jacoco.gradle'

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (ignored) {
        return null
    }

}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId "com.example.mchapagai"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", "API_KEY", "${API_KEY}"
        buildConfigField "String", "getVersionName", "\"${getVersionName()}\""
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
        lintConfig file('lint.xml')
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':MaterialLibrary')

    //noinspection GradleCompatible
    implementation "androidx.appcompat:appcompat:$versions.androidx_core"
    implementation "com.google.android.material:material:$versions.androidx_design"
    implementation "androidx.annotation:annotation:$versions.androidx_annotation"
    implementation "androidx.palette:palette:$versions.androidx_palette"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"

    testImplementation "junit:junit:$versions.junit_version"
    androidTestImplementation "com.android.support.test:runner:$versions.test_runner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$versions.expresso_core"
    testImplementation "org.robolectric:robolectric:$versions.robolectric"
    testImplementation "org.robolectric:shadows-multidex:$versions.robolectric"
    testImplementation "org.robolectric:shadows-supportv4:$versions.robolectric"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger"

    //Guava
    implementation "org.apache.commons:commons-lang3:$versions.apache_commons"

    // LeakCanary for memory leak detection
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"

    // Optional, if you use support library fragments:
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leakcanary"

    // Retrofit, RxJava, OkHttp3, Picasso
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    implementation "com.squareup.picasso:picasso:$versions.picasso"

    //Dagger2
    implementation "com.google.dagger:dagger:$versions.dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$versions.dagger"

    // ButterKnife
    implementation "com.jakewharton:butterknife:$versions.butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$versions.butterknife"

    // ViweModel & LoveData
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.arch_lifecycle_ext"
    implementation "androidx.lifecycle:lifecycle-runtime:$versions.arch_lifecycle"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$versions.arch_lifecycle"

    implementation "org.jacoco:org.jacoco.core:$versions.jacocoGradlePlugin"
}
